CEAlign Module
==============

The CEAlign module in the Protein Data Handler project specializes in structural alignment of protein data using the Combinatorial Extension (CE) algorithm. This module, extending BioinfoOperatorBase, is uniquely designed for structural analysis of protein clusters, particularly those generated by the CDHit module.

Class Overview
--------------

The `CEAlign` class is the core of this module, tailored for aligning protein structures within clusters identified by the CDHit module. It uses the CE algorithm, known for its efficacy in aligning proteins based on their 3D structures, especially useful in cases where sequence similarity is minimal.

.. autoclass:: protein_data_handler.operations.cealign.CEAlign
   :members:
   :undoc-members:
   :show-inheritance:

Key Features
------------

- **Cluster-Based Structural Alignment**: Aligns protein structures within clusters generated by CDHit.
- **Database Integration**: Efficiently manages protein structure data in SQL databases.
- **Concurrent Processing**: Utilizes multi-threading for aligning multiple structures in parallel.
- **Robust Error Handling**: Implements comprehensive error handling for reliable alignment operations.

Biopython Integration
---------------------

`CEAlign` leverages Biopython for processing and aligning protein structure data:

- **PDB Parsing**: Uses `PDBParser <https://biopython.org/docs/latest/api/Bio.PDB.PDBParser.html>`_ for parsing PDB format files.
- **CE Algorithm Implementation**: Employs `CEAligner <https://biopython.org/docs/dev/api/Bio.PDB.cealign.html>`_ for the structural alignment process.

SQL/ORM Entities
----------------

The module interacts with SQL/ORM entities relevant to protein clustering and structural data:

- :class:`~protein_data_handler.sql.model.PDBChains`: Manages information about Protein Data Bank chains.
- :class:`~protein_data_handler.sql.model.Cluster`: Stores data for clusters created by CDHit, crucial for alignment.
- :class:`~protein_data_handler.sql.model.CEAlignResults`: Records the outcomes of the CE alignment process.

These entities facilitate the organization and retrieval of protein structure data and alignment results within and across clusters.

Configuration
-------------

`CEAlign` requires specific configuration parameters, particularly for handling cluster data:

.. code-block:: yaml

    # CEAlign Configuration
    pdb_chains_path: [Path to PDB chains]
    num_workers: [Number of threads for concurrent processing]

These settings should be adjusted based on your structural alignment requirements and the scale of cluster data.

Usage
-----

To use `CEAlign`, initialize the class with the configuration and begin the alignment process:

.. code-block:: python

   from protein_data_handler.operations.cealign import CEAlign

   # Initialize with configuration
   cealign_instance = CEAlign(conf)

   # Start structural alignment
   cealign_instance.start()

This starts the structural alignment process, handling aspects from data loading to execution and storage, focusing on protein structures within the clusters generated by CDHit.
